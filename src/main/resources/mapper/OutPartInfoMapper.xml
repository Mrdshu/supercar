<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xw.supercar.entity.OutPartInfo" >
  <resultMap id="resultMap" type="com.xw.supercar.entity.OutPartInfo" >
	<id property="id" column="ID" />
	<result column="OUT_WORKORDER_NO" property="workOrderNo" />
	<result column="INVENTORY_ID" property="inventoryId" />
	<result column="P_SALE" property="sale" />
	<result column="OUT_COUNT" property="count" />
	<result column="ISDELETED" property="isDeleted" />
	   	
  </resultMap>
  
  <sql id="table">tb_out_part_info</sql>
  <sql id="columns">ID, OUT_WORKORDER_NO, INVENTORY_ID, P_SALE, OUT_COUNT, ISDELETED</sql>
  
  	<!-- 新增 -->
	<insert id="insert">
		INSERT INTO <include refid="table" /> (
			<include refid="columns" />
		) VALUES (
			<trim suffixOverrides=",">
				<choose><when test="id == ''">null</when><otherwise>#{id}</otherwise></choose>,
				 <choose><when test="workOrderNo == ''">null</when><otherwise>#{workOrderNo}</otherwise></choose>,
				 <choose><when test="inventoryId == ''">null</when><otherwise>#{inventoryId}</otherwise></choose>,
				 <choose><when test="sale == ''">null</when><otherwise>#{sale}</otherwise></choose>,
				 <choose><when test="count == ''">null</when><otherwise>#{count}</otherwise></choose>,
				default,
												
			</trim>
		)
	</insert>
	
	<!-- 批量新增 -->
	<insert id="insertList" useGeneratedKeys="true" parameterType="java.util.List">
		<selectKey resultType="long" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		INSERT INTO <include refid="table" /> (
			<include refid="columns" />
		) VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id}, #{item.workOrderNo}, #{item.inventoryId}, #{item.sale}, #{item.count}, #{item.isDeleted})
		</foreach>
	</insert>
	
	<!-- 修改 -->
	<update id="update" >
		UPDATE <include refid="table" /> SET <include refid="set" />
		WHERE ID = #{id}
	</update>
	
	<!-- 批量修改 -->
	<update id="updateBy" >
		UPDATE <include refid="table" /> SET <include refid="set" />
		<include refid="whereFilter"/>
	</update>
	
	<!-- 删除 -->
	<delete id="delete">
		DELETE FROM <include refid="table" /> 
		WHERE ID = #{id}
	</delete>
	
	<!-- 条件搜索删除 -->
	<delete id="deleteBy">
		DELETE FROM <include refid="table" /> 
		<include refid="where"/>
	</delete>
	
	<!-- 查询 -->
	<select id="selectBy" resultMap="resultMap">
		SELECT * from  <include refid="table" /> outPartInfo
		<include refid="where"/> <include refid="sort" />
	</select>
	
	<!-- 关联查询 -->
	<select id="extendSelectBy" resultType="java.util.HashMap">
		SELECT
		outPartInfo.ID id,
		outPartInfo.OUT_WORKORDER_NO workOrderNo,
		outPartInfo.INVENTORY_ID inventoryId,
		outPartInfo.P_SALE sale,
		outPartInfo.OUT_COUNT count,
		outPartInfo.ISDELETED isDeleted,
		outPart.out_type workOrderNo_type,
		outPart.out_receiver workOrderNo_receiver,
		outPart.out_time workOrderNo_outTime,
		inventory.P_ID inventoryId_partId,
		inventory.P_COUNT inventoryId_count,
		inventory.P_COMPANY inventoryId_company,
		inventory.R_CODE inventoryId_repCodeLK,
		part.P_CODE partId_code,
		part.P_NAME partId_name,
		part.P_UNIT partId_unitLK,
		part.P_SALE partId_sale,
		part.P_WHOLESALE partId_wholeSale,
		part.P_PRODUCE_AREA partId_produceArea,
		part.P_SPECIFICATION partId_specificationLK,
		part.P_CAR_MODEL partId_carModel,
		part.P_CATEGORY partId_pCategoryLK,
		repository.LK_CODE repositoryCodeLK_code,
		repository.LK_VALUE repositoryCodeLK_value,
		unit.LK_CODE unitLK_code,
		unit.LK_VALUE unitLK_value,
		userr.U_USERNAME receiver_username
		FROM  <include refid="table" /> outPartInfo
		LEFT JOIN tb_out_part outPart ON (outPart.out_workorder_no = outPartInfo.OUT_WORKORDER_NO)
		LEFT JOIN tb_inventory inventory ON (outPartInfo.inventory_id = inventory.id)
		LEFT JOIN tb_part part ON (inventory.p_id = part.id)
		LEFT JOIN tb_lookup repository ON (repository.id = inventory.r_code)
		LEFT JOIN tb_lookup unit ON (unit.id = part.P_UNIT)
		LEFT JOIN tb_user userr ON (userr.id = outPart.out_receiver)
		<include refid="where"/> order by outPartInfo.out_workorder_no desc
	</select>
	
	<!-- 计数 -->
	<select id="countBy" resultType="long">
		SELECT count(ID) FROM <include refid="table" /> outPartInfo
		<include refid="where" />
	</select>
	
	<!-- 关联查询计数 -->
	<select id="extendCountBy" resultType="long">
		SELECT count(outPartInfo.ID)
		FROM  <include refid="table" /> outPartInfo
		LEFT JOIN tb_out_part outPart ON (outPart.out_workorder_no = outPartInfo.out_workorder_no)
		LEFT JOIN tb_inventory inventory ON (outPartInfo.inventory_id = inventory.id)
		LEFT JOIN tb_part part ON (inventory.p_id = part.id)
		LEFT JOIN tb_lookup repository ON (repository.id = inventory.r_code)
		LEFT JOIN tb_lookup unit ON (unit.id = part.P_UNIT)
		LEFT JOIN tb_user userr ON (userr.id = outPart.out_receiver)
		<include refid="where"/>
	</select>
	
	<!-- 修改时用的的set语句 -->
	<sql id="set">
		<trim suffixOverrides=",">
			<if test="workOrderNo != null">OUT_WORKORDER_NO = <choose><when test="workOrderNo == ''">null</when><otherwise>#{workOrderNo}</otherwise></choose>,</if>
			<if test="inventoryId != null">INVENTORY_ID = <choose><when test="inventoryId == ''">null</when><otherwise>#{inventoryId}</otherwise></choose>,</if>
			<if test="sale != null">P_SALE = <choose><when test="sale == ''">null</when><otherwise>#{sale}</otherwise></choose>,</if>
			<if test="count != null">OUT_COUNT = <choose><when test="count == ''">null</when><otherwise>#{count}</otherwise></choose>,</if>
			<if test="isDeleted != null">ISDELETED = <choose><when test="isDeleted == ''">null</when><otherwise>#{isDeleted}</otherwise></choose>,</if>

		</trim>
	</sql>
	
	<!-- where语句（对应entity中的属性）-->
	<sql id="whereEntity">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="id != null">AND ID = #{id}</if>
			<if test="workOrderNo != null">AND OUT_WORKORDER_NO = #{workOrderNo}</if>
			<if test="inventoryId != null">AND INVENTORY_ID = #{inventoryId}</if>
			<if test="sale != null">AND P_SALE = #{sale}</if>
			<if test="count != null">AND OUT_COUNT = #{count}</if>
			<if test="isDeleted != null">AND outPartInfo.ISDELETED = #{isDeleted}</if>

		</trim>
	</sql>
	<!-- where语句（对应Searchable）-->
	<sql id="whereFilter">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="filter != null">
				<if test="filter.workOrderNo_eq != null">AND outPartInfo.OUT_WORKORDER_NO = #{filter.workOrderNo_eq}</if>
				<if test="filter.workOrderNo_ne != null">AND outPartInfo.OUT_WORKORDER_NO != #{filter.workOrderNo_ne}</if>
				<if test="filter.workOrderNo_like != null">AND lower(outPartInfo.OUT_WORKORDER_NO) LIKE lower(#{filter.workOrderNo_like})</if>
				<if test="filter.workOrderNo_in != null">AND <foreach item="ii" collection="filter.workOrderNo_in" open="(" separator=" OR " close=")">outPartInfo.OUT_WORKORDER_NO in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.workOrderNo_notIn != null">AND <foreach item="ii" collection="filter.workOrderNo_notIn" open="(" separator=" AND " close=")">outPartInfo.OUT_WORKORDER_NO not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
	
				<if test="filter.inventoryId_eq != null">AND INVENTORY_ID = #{filter.inventoryId_eq}</if>
				<if test="filter.inventoryId_ne != null">AND INVENTORY_ID != #{filter.inventoryId_ne}</if>
				<if test="filter.inventoryId_like != null">AND lower(INVENTORY_ID) LIKE lower(#{filter.inventoryId_like})</if>
				<if test="filter.inventoryId_in != null">AND <foreach item="ii" collection="filter.inventoryId_in" open="(" separator=" OR " close=")">INVENTORY_ID in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.inventoryId_notIn != null">AND <foreach item="ii" collection="filter.inventoryId_notIn" open="(" separator=" AND " close=")">INVENTORY_ID not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
	
				<if test="filter.sale_eq != null">AND P_SALE = #{filter.sale_eq}</if>
				<if test="filter.sale_ne != null">AND P_SALE != #{filter.sale_ne}</if>
				<if test="filter.sale_like != null">AND lower(P_SALE) LIKE lower(#{filter.sale_like})</if>
				<if test="filter.sale_in != null">AND <foreach item="ii" collection="filter.sale_in" open="(" separator=" OR " close=")">P_SALE in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.sale_notIn != null">AND <foreach item="ii" collection="filter.sale_notIn" open="(" separator=" AND " close=")">P_SALE not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
	
				<if test="filter.count_eq != null">AND OUT_COUNT = #{filter.count_eq}</if>
				<if test="filter.count_ne != null">AND OUT_COUNT != #{filter.count_ne}</if>
				<if test="filter.count_like != null">AND lower(OUT_COUNT) LIKE lower(#{filter.count_like})</if>
				<if test="filter.count_in != null">AND <foreach item="ii" collection="filter.count_in" open="(" separator=" OR " close=")">OUT_COUNT in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.count_notIn != null">AND <foreach item="ii" collection="filter.count_notIn" open="(" separator=" AND " close=")">OUT_COUNT not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
	
				<if test="filter.isDeleted_eq != null">AND outPartInfo.ISDELETED = #{filter.isDeleted_eq}</if>
				<if test="filter.isDeleted_ne != null">AND outPartInfo.ISDELETED != #{filter.isDeleted_ne}</if>
				
				<!-- 外键约束的搜索条件 -->
				<if test="filter.company_eq != null">AND outPart.COMPANY = #{filter.company_eq}</if>
				<if test="filter.company_ne != null">AND outPart.COMPANY != #{filter.company_ne}</if>
				<if test="filter.company_in != null">AND <foreach item="ii" collection="filter.company_in" open="(" separator=" OR " close=")">outPart.COMPANY in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.company_notIn != null">AND <foreach item="ii" collection="filter.company_notIn" open="(" separator=" AND " close=")">outPart.COMPANY not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				
				<!-- 外键约束的搜索条件 -->
				<if test="filter.type_eq != null">AND outPart.out_type = #{filter.type_eq}</if>
				<if test="filter.type_ne != null">AND outPart.out_type != #{filter.type_ne}</if>
				<if test="filter.type_in != null">AND <foreach item="ii" collection="filter.type_in" open="(" separator=" OR " close=")">outPart.out_type in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
				<if test="filter.type_notIn != null">AND <foreach item="ii" collection="filter.type_notIn" open="(" separator=" AND " close=")">outPart.out_type not in <foreach item="i" collection="ii" open="(" separator="," close=")">#{i}</foreach></foreach></if>
					
			</if>
		</trim>
	</sql>
	
	<!-- where语句-->
	<sql id="where">
		<trim prefix="WHERE " prefixOverrides="AND |OR ">
			<trim prefixOverrides="WHERE ">
				<include refid="whereEntity" />
			</trim>
			<trim prefix="AND " prefixOverrides="WHERE ">
				<include refid="whereFilter" />
			</trim>
		</trim>
	</sql>
	
	<!-- sort排序语句-->
	<sql id="sort">
		<if test="sort == null" >
			
		</if>
		<if test="sort != null" >
			<trim prefix="ORDER BY " suffixOverrides=",">
				<foreach collection="sort" index="key" item="val">
				</foreach>
			</trim>
		</if>
	</sql>
</mapper>